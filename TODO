SEGWIT-related
- create TxInputWitness class that includes the witness script and knows how to serialize itself and how to calc byte length (for get_vsize)
- explain get_transaction_segwit_digest() better and test further
- clean and comment the segwit examples !
  . test some more segwit txs including nested ones

- unsigned segwit serialized transaction does not get the segwit flag/marker (signed is fine!)

Taproot-related
- bech32m
- add tests for bech32m
- add schnorr
- add default taproot spending
- add single alt spending
- add tree alt spendin

PSBT
- add!
- https://bip174.org/

DOC-related
- add explicit documentation for each module before members...
- commit docs/usage/proxy.rst
- add segwit examples in README 
- segwit in documentation
- add more modules to documantation

CODE-related
- make all code < 80 chars !?
- improve test structure - look at python-bitcoinlib or its derived python-bitcointx for example

Efficiency
- make all internal variables bytes for processing and convert when input (hex usually) or output (displaying hex usually)
  . hmm, only applies for Addresses' classes

WINDOWS
- it seems that the default port does not work on windows; need to specify the port explicitly in NodeProxy

OTHERLIBS-related
- add to bitcoin-rpc lib option to ignore invalid ssl cert
  . needed to access remotely withut cert (for other validators from clients)
  . https://github.com/jgarzik/python-bitcoinrpc/pull/50
  . but not in a lib release yet
  . add config.ini option to optionally ignore cert so that it works when calling btcd remotely

OTHER
- reminder: update copyright in all files 2018-2022?
- create script: clean-less-than-sats 100000 bc1q86gsg4t32...
- create test with 260 outputs (inputs too much trouble) - file: test_extreme_txs.py
- create test with script of 260 and another with 66000 commands
- make test of send to P2WPKH transaction example


